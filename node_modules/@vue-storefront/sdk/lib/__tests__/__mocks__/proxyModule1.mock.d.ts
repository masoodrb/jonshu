/// <reference types="jest" />
export default function createProxyModule1(options: any, methodMock?: Function): {
    connector: {
        callProxyFunction: () => symbol;
    };
    utils: {
        helpers: {
            formatCurrency(price: string, currency: string): string;
        };
    };
    extend: {};
    interceptors: {
        before: {
            callProxyFunction: jest.Mock<any[], any[], any>;
        };
        after: {
            callProxyFunction: jest.Mock<any[], any[], any>;
        };
    }[];
    subscribers: {
        '*_before': jest.Mock<any, any, any>[];
        proxyModule1_callProxyFunction_before: jest.Mock<any, any, any>;
    };
};
export declare const stringDecoratorInterceptor: (result: string) => string;
export type ProxyModule1 = ReturnType<typeof createProxyModule1>;
//# sourceMappingURL=proxyModule1.mock.d.ts.map