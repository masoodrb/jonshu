import { CheckOptions, FocusableElement, TabbableOptions } from 'tabbable';
import { Ref } from 'vue';
import { focusNext, focusPrev } from '@storefront-ui/shared';

export declare enum InitialFocusType {
    autofocus = "autofocus",
    container = "container"
}
type UseTrapFocusOptions = TabbableOptions & CheckOptions & {
    trapTabs?: boolean;
    arrowFocusGroupSelector?: string;
    activeState?: Ref<boolean>;
    initialFocus?: number | `${InitialFocusType}` | false;
    initialFocusContainerFallback?: boolean;
    /**
     * Enabling both `left` | `up` | `right` | `down` arrow keys.
     * @deprecated Since version 2.3. Use arrowKeysLeftRight or/and arrowKeysUpDown options instead.
     */
    arrowKeysOn?: boolean;
    arrowKeysLeftRight?: boolean;
    arrowKeysUpDown?: boolean;
};
type UseTrapFocusReturn = {
    current: Ref<HTMLElement | undefined>;
    focusables: Ref<FocusableElement[]>;
    focusNext: typeof focusNext;
    focusPrev: typeof focusPrev;
    updateFocusableElements: () => void;
};
export declare const useTrapFocus: (containerElementRef: Ref<HTMLElement | undefined>, options?: UseTrapFocusOptions) => UseTrapFocusReturn;
export {};
//# sourceMappingURL=useTrapFocus.d.ts.map