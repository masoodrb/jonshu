import { ReferenceElement } from '@floating-ui/vue';
import { UseTooltipOptions } from '../../index.ts';

export declare function useTooltip<ReferenceEl extends ReferenceElement = ReferenceElement>(options?: UseTooltipOptions<ReferenceEl>): {
    referenceRef: Readonly<import('vue').Ref<import('@floating-ui/vue').MaybeElement<ReferenceEl>>>;
    floatingRef: Readonly<import('vue').Ref<import('@floating-ui/vue').MaybeElement<HTMLElement>>>;
    arrowRef: import('vue').Ref<HTMLElement | undefined>;
    style: import('vue').ComputedRef<{
        floating: {
            position: import('@floating-ui/utils').Strategy;
            top: string;
            left: string;
        };
        arrow: {
            [x: string]: string;
            position: "absolute";
            width: import('@storefront-ui/shared').CSSLength;
            height: import('@storefront-ui/shared').CSSLength;
            top: string;
            left: string;
        } | {
            position?: undefined;
            width?: undefined;
            height?: undefined;
            top?: undefined;
            left?: undefined;
        };
    }>;
    isOpen: import('vue').Ref<boolean>;
    open: () => boolean;
    close: () => boolean;
    toggle: (value?: boolean | undefined) => boolean;
    triggerProps: import('vue').ComputedRef<{
        ref: Readonly<import('vue').Ref<import('@floating-ui/vue').MaybeElement<ReferenceEl>>>;
        onMouseenter: () => boolean;
        onMouseleave: () => boolean;
    }>;
    tooltipProps: import('vue').ComputedRef<{
        ref: Readonly<import('vue').Ref<import('@floating-ui/vue').MaybeElement<HTMLElement>>>;
        style: {
            position: import('@floating-ui/utils').Strategy;
            top: string;
            left: string;
        };
    }>;
    arrowProps: import('vue').ComputedRef<{
        ref: import('vue').Ref<HTMLElement | undefined>;
        style: {
            [x: string]: string;
            position: "absolute";
            width: import('@storefront-ui/shared').CSSLength;
            height: import('@storefront-ui/shared').CSSLength;
            top: string;
            left: string;
        } | {
            position?: undefined;
            width?: undefined;
            height?: undefined;
            top?: undefined;
            left?: undefined;
        };
    }>;
};
//# sourceMappingURL=useTooltip.d.ts.map