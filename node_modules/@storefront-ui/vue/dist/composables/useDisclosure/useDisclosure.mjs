import { syncRefs as t } from "@vueuse/core";
import { ref as f, unref as n, isRef as c } from "vue";
function i({ initialValue: o = !1 } = {}) {
  const e = f(n(o)), s = (r) => e.value = r ?? !e.value;
  return c(o) && t(o, e, { immediate: !0 }), { isOpen: e, open: () => s(!0), close: () => s(!1), toggle: s };
}
export {
  i as useDisclosure
};
