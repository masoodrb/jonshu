import { computed as c, unref as r, ref as l, onMounted as d, watch as m, onUnmounted as b } from "vue";
import { focusVisibleManager as F } from "@storefront-ui/shared";
const e = F(), g = (n = {}) => {
  const o = c(() => r(n.isTextInput)), t = l(n.autoFocus || e.isFocusVisible());
  d(() => {
    e.setupGlobalFocusEvents();
  });
  let s = () => {
  };
  return m(
    o,
    () => {
      s();
      const u = (i, a) => {
        e.isKeyboardFocusEvent(o == null ? void 0 : o.value, i, a) && (t.value = e.isFocusVisible());
      };
      e.changeHandlers.add(u), s = () => {
        e.changeHandlers.delete(u);
      };
    },
    { immediate: !0 }
  ), b(() => {
    s();
  }), { isFocusVisible: t };
};
export {
  g as useFocusVisible
};
