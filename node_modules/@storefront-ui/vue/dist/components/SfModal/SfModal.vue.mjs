import { defineComponent as u, toRefs as f, ref as c, unref as m, openBlock as p, createBlock as y, resolveDynamicComponent as b, withKeys as w, withCtx as k, renderSlot as C, createCommentVNode as h } from "vue";
import { onClickOutside as x } from "@vueuse/core";
import { useTrapFocus as V } from "../../composables/useTrapFocus/useTrapFocus.mjs";
const F = /* @__PURE__ */ u({
  __name: "SfModal",
  props: {
    modelValue: {
      type: Boolean,
      default: !1
    },
    tag: {
      type: [String, Object],
      default: ""
    },
    disableClickAway: {
      type: Boolean,
      default: !1
    },
    disableEsc: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(t, { emit: l }) {
    const n = t, { disableClickAway: s, disableEsc: i, modelValue: a } = f(n), o = l, e = c();
    x(e, () => {
      s.value || o("update:modelValue", !1);
    });
    const r = () => {
      i.value || o("update:modelValue", !1);
    };
    return V(e, {
      trapTabs: !0,
      activeState: a,
      initialFocus: !1,
      initialFocusContainerFallback: !0
    }), (d, g) => m(a) ? (p(), y(b(t.tag || "div"), {
      key: 0,
      ref_key: "modalRef",
      ref: e,
      "aria-modal": "true",
      "data-testid": "modal",
      tabindex: "-1",
      class: "fixed inset-0 w-fit h-fit m-auto p-6 pt-10 lg:p-10 border border-neutral-100 bg-white shadow-xl rounded-xl outline-none",
      onKeydown: w(r, ["esc"])
    }, {
      default: k(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 544)) : h("", !0);
  }
});
export {
  F as default
};
