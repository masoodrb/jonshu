import { defineComponent as o, toRefs as u, computed as c, openBlock as p, createElementBlock as f, normalizeClass as x, unref as i, renderSlot as m } from "vue";
import { SfCounterSize as t } from "@storefront-ui/shared";
const C = /* @__PURE__ */ o({
  __name: "SfCounter",
  props: {
    size: {
      type: String,
      default: t.base
    },
    pill: {
      type: Boolean,
      default: !1
    }
  },
  setup(r) {
    const s = r, { size: n, pill: e } = u(s), a = c(() => {
      switch (n == null ? void 0 : n.value) {
        case t["3xs"]:
          return ["text-3xs", { "px-1": e.value }];
        case t["2xs"]:
          return ["text-2xs", { "px-1.5": e.value }];
        case t.xs:
          return ["text-xs", { "px-2": e.value }];
        case t.sm:
          return ["text-sm", { "px-2.5": e.value }];
        case t.lg:
          return ["text-lg", { "px-3.5": e.value }];
        default:
          return ["text-base", { "px-3": e.value }];
      }
    });
    return (l, d) => (p(), f("span", {
      class: x(["inline-flex items-center before:content-['('] after:content-[')'] text-neutral-500", [
        a.value,
        {
          "rounded-full py-0.5 font-medium ring-1 ring-neutral-200 ring-inset before:content-none after:content-none": i(e)
        }
      ]]),
      "data-testid": "counter"
    }, [
      m(l.$slots, "default")
    ], 2));
  }
});
export {
  C as default
};
