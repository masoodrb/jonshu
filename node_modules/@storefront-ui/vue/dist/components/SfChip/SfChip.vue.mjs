import { defineComponent as k, toRefs as S, computed as c, openBlock as C, createElementBlock as $, Fragment as z, withDirectives as V, createElementVNode as f, mergeProps as m, unref as n, vModelCheckbox as w, renderSlot as s, createCommentVNode as x } from "vue";
import { useSlotsRef as B } from "../../shared/reactiveContext.mjs";
import { useId as P } from "../../shared/useId.mjs";
import { SfChipSize as r } from "@storefront-ui/shared";
const j = ["id"], q = ["for"], E = {
  [r.sm]: "text-sm py-1.5 gap-1.5",
  [r.base]: "text-base py-2 gap-2"
}, A = /* @__PURE__ */ k({
  __name: "SfChip",
  props: {
    size: {
      type: String,
      default: r.base
    },
    modelValue: {
      type: [String, Array, Boolean],
      default: !1
    },
    inputProps: {
      type: Object,
      default: null
    },
    square: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(o, { emit: g }) {
    const b = o, { size: a, square: l, modelValue: i } = S(b), v = g, t = B(), p = P(), u = c({
      get: () => i == null ? void 0 : i.value,
      set: (e) => v("update:modelValue", e)
    }), y = c(() => {
      switch (a.value) {
        case r.sm:
          return l.value ? "px-1.5" : [t.value.prefix ? "pl-1.5" : "pl-3", t.value.suffix ? "pr-1.5" : "pr-3"];
        default:
          return l.value ? "px-2" : [t.value.prefix ? "pl-2" : "pl-4", t.value.suffix ? "pr-2" : "pr-4"];
      }
    });
    return (e, d) => (C(), $(z, null, [
      V(f("input", m({
        id: n(p),
        "onUpdate:modelValue": d[0] || (d[0] = (h) => u.value = h),
        class: "absolute w-0 outline-none appearance-none peer",
        type: "checkbox"
      }, o.inputProps), null, 16, j), [
        [w, u.value]
      ]),
      f("label", m({
        for: n(p),
        class: [
          "cursor-pointer ring-1 ring-neutral-200 ring-inset rounded-full inline-flex items-center transition duration-300 justify-center outline-offset-2 outline-secondary-600 peer-next-checked:ring-2 peer-next-checked:ring-primary-700 hover:bg-primary-100 peer-next-hover:ring-primary-200 active:bg-primary-200 peer-next-active:ring-primary-300 peer-next-disabled:cursor-not-allowed peer-next-disabled:bg-disabled-100 peer-next-disabled:opacity-50 peer-next-disabled:ring-1 peer-next-disabled:ring-disabled-200 peer-next-disabled:hover:ring-disabled-200 peer-next-checked:hover:ring-primary-700 peer-next-checked:active:ring-primary-700 peer-next-focus-visible:outline",
          E[n(a)],
          y.value
        ],
        "data-testid": "chip"
      }, e.$attrs), [
        e.$slots.prefix ? s(e.$slots, "prefix", { key: 0 }) : x("", !0),
        s(e.$slots, "default"),
        e.$slots.suffix ? s(e.$slots, "suffix", { key: 1 }) : x("", !0)
      ], 16, q)
    ], 64));
  }
});
export {
  A as default
};
