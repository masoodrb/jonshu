import { defineComponent as y, toRefs as k, computed as e, openBlock as t, createElementBlock as i, normalizeClass as N, Fragment as v, renderList as x, createBlock as u, unref as o, createCommentVNode as z } from "vue";
import { SfRatingSize as a, clamp as S, roundToNearest as $ } from "@storefront-ui/shared";
import w from "../SfIcons/SfIconStarFilled.vue.mjs";
import B from "../SfIcons/SfIconStarHalf.vue.mjs";
import C from "../SfIcons/SfIconStar.vue.mjs";
const I = ["ariaLabel", "title"], L = {
  [a.xs]: "text-xs",
  [a.sm]: "text-sm",
  [a.base]: "text-base",
  [a.lg]: "text-lg",
  [a.xl]: "text-xl"
}, q = /* @__PURE__ */ y({
  __name: "SfRating",
  props: {
    size: {
      type: String,
      default: a.base
    },
    max: {
      type: Number,
      default: 5
    },
    value: {
      type: Number,
      default: 0
    },
    halfIncrement: {
      type: Boolean,
      default: !1
    },
    ariaLabel: {
      type: String,
      default: void 0
    }
  },
  setup(m) {
    const g = m, { value: c, max: l, halfIncrement: _, ariaLabel: r } = k(g), b = e(() => _.value ? 0.5 : 1), f = e(() => S($(c.value, b.value), 0, l.value)), n = e(() => +!Number.isInteger(f.value)), d = e(() => Math.ceil(f.value - n.value)), h = e(() => l.value - d.value - n.value), p = e(() => (r == null ? void 0 : r.value) ?? `${c.value} out of ${l.value}`);
    return (R, F) => (t(), i("span", {
      role: "img",
      ariaLabel: p.value,
      title: p.value,
      class: N(["inline-flex items-center text-warning-500", L[m.size]]),
      "data-testid": "rating"
    }, [
      (t(!0), i(v, null, x(d.value, (s) => (t(), u(o(w), {
        key: s,
        "aria-hidden": "true",
        class: "w-[1.5em] h-[1.5em]"
      }))), 128)),
      n.value ? (t(), u(o(B), {
        key: 0,
        "aria-hidden": "true",
        class: "w-[1.5em] h-[1.5em]"
      })) : z("", !0),
      (t(!0), i(v, null, x(h.value, (s) => (t(), u(o(C), {
        key: s,
        "aria-hidden": "true",
        class: "text-disabled-500 w-[1.5em] h-[1.5em]"
      }))), 128))
    ], 10, I));
  }
});
export {
  q as default
};
