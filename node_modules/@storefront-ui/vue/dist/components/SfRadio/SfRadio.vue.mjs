import { defineComponent as n, toRefs as s, computed as u, withDirectives as b, openBlock as v, createElementBlock as m, normalizeClass as p, vModelRadio as h } from "vue";
const f = ["name", "value", "disabled"], y = /* @__PURE__ */ n({
  __name: "SfRadio",
  props: {
    modelValue: {
      type: String,
      default: ""
    },
    name: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    value: {
      type: String,
      default: ""
    },
    invalid: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const i = e, l = t, { modelValue: o } = s(i), a = u({
      get: () => o.value,
      set: (d) => {
        l("update:modelValue", d);
      }
    });
    return (d, r) => b((v(), m("input", {
      "onUpdate:modelValue": r[0] || (r[0] = (c) => a.value = c),
      name: e.name,
      type: "radio",
      value: e.value,
      class: p([
        "h-5 w-5 border-2 p-[3px] bg-clip-content rounded-full appearance-none cursor-pointer focus-visible:outline focus-visible:outline-offset disabled:border-disabled-500 disabled:cursor-not-allowed disabled:checked:bg-disabled-500 disabled:checked:border-disabled-500",
        e.invalid && !e.disabled ? "border-negative-700 checked:bg-negative-700 hover:border-negative-800 hover:checked:bg-negative-800 active:border-negative-900 active:checked:bg-negative-900" : "border-neutral-500 active:border-primary-900 hover:border-primary-700 checked:bg-primary-700 checked:border-primary-700 hover:checked:bg-primary-800 hover:checked:border-primary-800 active:checked:bg-primary-900 active:checked:border-primary-900"
      ]),
      disabled: e.disabled
    }, null, 10, f)), [
      [h, a.value]
    ]);
  }
});
export {
  y as default
};
