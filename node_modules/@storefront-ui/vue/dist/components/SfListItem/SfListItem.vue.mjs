import { defineComponent as u, openBlock as l, createBlock as s, resolveDynamicComponent as a, normalizeClass as n, withCtx as i, renderSlot as o, createCommentVNode as f } from "vue";
import { SfListItemSize as d } from "@storefront-ui/shared";
const r = {
  [d.sm]: "text-sm px-4 py-1",
  [d.base]: "px-4 py-2",
  [d.lg]: "p-4"
}, g = /* @__PURE__ */ u({
  __name: "SfListItem",
  props: {
    size: {
      type: String,
      default: d.base
    },
    disabled: {
      type: Boolean,
      default: void 0
    },
    selected: {
      type: Boolean,
      default: !1
    },
    tag: {
      type: [String, Object],
      default: void 0
    },
    childrenTag: {
      type: String,
      default: "span"
    }
  },
  setup(e) {
    return (t, c) => (l(), s(a(e.tag || "li"), {
      class: n([
        "inline-flex items-center gap-2 w-full hover:bg-neutral-100 active:bg-neutral-200 cursor-pointer focus-visible:outline focus-visible:outline-offset focus-visible:relative focus-visible:z-10",
        r[e.size],
        { "cursor-not-allowed pointer-events-none text-disabled-900": e.disabled, "font-medium": e.selected }
      ]),
      disabled: e.disabled,
      "data-testid": "list-item"
    }, {
      default: i(() => [
        t.$slots.prefix ? (l(), s(a(e.childrenTag), {
          key: 0,
          class: n(e.disabled ? "text-disabled-500" : "text-neutral-500")
        }, {
          default: i(() => [
            o(t.$slots, "prefix")
          ]),
          _: 3
        }, 8, ["class"])) : f("", !0),
        (l(), s(a(e.childrenTag), { class: "flex flex-col w-full min-w-0" }, {
          default: i(() => [
            o(t.$slots, "default")
          ]),
          _: 3
        })),
        t.$slots.suffix ? (l(), s(a(e.childrenTag), {
          key: 1,
          class: n(e.disabled ? "text-disabled-500" : "text-neutral-500")
        }, {
          default: i(() => [
            o(t.$slots, "suffix")
          ]),
          _: 3
        }, 8, ["class"])) : f("", !0)
      ]),
      _: 3
    }, 8, ["class", "disabled"]));
  }
});
export {
  g as default,
  r as sizeClasses
};
