import { defineComponent as n, toRefs as i, computed as u, openBlock as c, createElementBlock as x, unref as g, normalizeClass as s, createElementVNode as m, renderSlot as d } from "vue";
import { SfProgressSize as e } from "@storefront-ui/shared";
const p = ["aria-valuenow", "aria-label", "stroke-dasharray"], k = {
  [e.xs]: "h-4 w-4 ring-2",
  [e.sm]: "h-5 w-5 ring-2",
  [e.base]: "h-6 w-6 ring-2",
  [e.lg]: "h-8 w-8 ring-2",
  [e.xl]: "h-10 w-10 ring-2",
  [e["2xl"]]: "h-14 w-14 ring-[3px]",
  [e["3xl"]]: "h-24 w-24 ring-4",
  [e["4xl"]]: "h-48 w-48 ring-8"
}, f = {
  [e.xs]: "stroke-[10px]",
  [e.sm]: "stroke-[8px]",
  [e.base]: "stroke-[6px]",
  [e.lg]: "stroke-[4px]",
  [e.xl]: "stroke-[3px]",
  [e["2xl"]]: "stroke-[3px]",
  [e["3xl"]]: "stroke-2",
  [e["4xl"]]: "stroke-2"
}, v = /* @__PURE__ */ n({
  __name: "SfProgressCircular",
  props: {
    value: {
      type: Number,
      default: 0
    },
    size: {
      type: String,
      default: e.base
    },
    ariaLabel: {
      type: String,
      default: "Progress element"
    }
  },
  setup(r) {
    const t = r, { value: a } = i(t), o = u(() => `${a.value / 100 * 151}, 150`);
    return (l, h) => (c(), x("svg", {
      role: "progressbar",
      "aria-valuemin": "0",
      "aria-valuemax": "100",
      "aria-valuenow": g(a),
      "aria-label": r.ariaLabel,
      class: s(["inline-block ring-inset ring-neutral-300 text-primary-700 rounded-full transition-[stroke-dasharray] ease-in-out duration-500 text-sm", k[r.size]]),
      viewBox: "25 25 50 50",
      "stroke-dasharray": o.value,
      "data-testid": "progress"
    }, [
      m("circle", {
        class: s([f[r.size], "origin-bottom-right -rotate-90 stroke-current fill-none"]),
        cx: "50",
        cy: "50",
        r: "24"
      }, null, 2),
      d(l.$slots, "default")
    ], 10, p));
  }
});
export {
  v as default
};
